/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.11.12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FileSnapshot;
import io.swagger.client.model.GeoPoint;
import io.swagger.client.model.MapAddress;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * POI
 */
@ApiModel(description = "POI")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-19T22:49:09.515+01:00")
public class POI {
  @SerializedName("location")
  private GeoPoint location = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("address")
  private MapAddress address = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("picture")
  private FileSnapshot picture = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("name")
  private String name = null;

  public POI location(GeoPoint location) {
    this.location = location;
    return this;
  }

   /**
   * Współrzędne
   * @return location
  **/
  @ApiModelProperty(value = "Współrzędne")
  public GeoPoint getLocation() {
    return location;
  }

  public void setLocation(GeoPoint location) {
    this.location = location;
  }

  public POI category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Kategoria
   * @return category
  **/
  @ApiModelProperty(value = "Kategoria")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public POI address(MapAddress address) {
    this.address = address;
    return this;
  }

   /**
   * Adres
   * @return address
  **/
  @ApiModelProperty(value = "Adres")
  public MapAddress getAddress() {
    return address;
  }

  public void setAddress(MapAddress address) {
    this.address = address;
  }

  public POI id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Identyfikator obiektu
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Identyfikator obiektu")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public POI picture(FileSnapshot picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Obrazek POI
   * @return picture
  **/
  @ApiModelProperty(value = "Obrazek POI")
  public FileSnapshot getPicture() {
    return picture;
  }

  public void setPicture(FileSnapshot picture) {
    this.picture = picture;
  }

  public POI description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Opis
   * @return description
  **/
  @ApiModelProperty(value = "Opis")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public POI metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public POI putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "Metadata")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public POI name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nazwa
   * @return name
  **/
  @ApiModelProperty(value = "Nazwa")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    POI POI = (POI) o;
    return Objects.equals(this.location, POI.location) &&
        Objects.equals(this.category, POI.category) &&
        Objects.equals(this.address, POI.address) &&
        Objects.equals(this.id, POI.id) &&
        Objects.equals(this.picture, POI.picture) &&
        Objects.equals(this.description, POI.description) &&
        Objects.equals(this.metadata, POI.metadata) &&
        Objects.equals(this.name, POI.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, category, address, id, picture, description, metadata, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class POI {\n");
    
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

