/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.11.12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Violation;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Violation problem
 */
@ApiModel(description = "Violation problem")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-19T22:49:09.515+01:00")
public class ViolationProblem {
  @SerializedName("httpCode")
  private Integer httpCode = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("codes")
  private List<String> codes = null;

  @SerializedName("violations")
  private List<Violation> violations = new ArrayList<Violation>();

  @SerializedName("type")
  private String type = null;

  public ViolationProblem httpCode(Integer httpCode) {
    this.httpCode = httpCode;
    return this;
  }

   /**
   * HTTP code
   * @return httpCode
  **/
  @ApiModelProperty(required = true, value = "HTTP code")
  public Integer getHttpCode() {
    return httpCode;
  }

  public void setHttpCode(Integer httpCode) {
    this.httpCode = httpCode;
  }

  public ViolationProblem message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Message
   * @return message
  **/
  @ApiModelProperty(required = true, value = "Message")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ViolationProblem codes(List<String> codes) {
    this.codes = codes;
    return this;
  }

  public ViolationProblem addCodesItem(String codesItem) {
    if (this.codes == null) {
      this.codes = new ArrayList<String>();
    }
    this.codes.add(codesItem);
    return this;
  }

   /**
   * Codes
   * @return codes
  **/
  @ApiModelProperty(value = "Codes")
  public List<String> getCodes() {
    return codes;
  }

  public void setCodes(List<String> codes) {
    this.codes = codes;
  }

  public ViolationProblem violations(List<Violation> violations) {
    this.violations = violations;
    return this;
  }

  public ViolationProblem addViolationsItem(Violation violationsItem) {
    this.violations.add(violationsItem);
    return this;
  }

   /**
   * Violations
   * @return violations
  **/
  @ApiModelProperty(required = true, value = "Violations")
  public List<Violation> getViolations() {
    return violations;
  }

  public void setViolations(List<Violation> violations) {
    this.violations = violations;
  }

  public ViolationProblem type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViolationProblem violationProblem = (ViolationProblem) o;
    return Objects.equals(this.httpCode, violationProblem.httpCode) &&
        Objects.equals(this.message, violationProblem.message) &&
        Objects.equals(this.codes, violationProblem.codes) &&
        Objects.equals(this.violations, violationProblem.violations) &&
        Objects.equals(this.type, violationProblem.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(httpCode, message, codes, violations, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViolationProblem {\n");
    
    sb.append("    httpCode: ").append(toIndentedString(httpCode)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    codes: ").append(toIndentedString(codes)).append("\n");
    sb.append("    violations: ").append(toIndentedString(violations)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

