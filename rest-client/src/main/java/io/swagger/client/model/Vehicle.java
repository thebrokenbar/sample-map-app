/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.11.12
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.FileSnapshot;
import io.swagger.client.model.GeoPoint;
import io.swagger.client.model.LocationDescription;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Model pojazdu
 */
@ApiModel(description = "Model pojazdu")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-02-19T22:49:09.515+01:00")
public class Vehicle {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("rangeKm")
  private Long rangeKm = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("platesNumber")
  private String platesNumber = null;

  @SerializedName("reservationEnd")
  private OffsetDateTime reservationEnd = null;

  @SerializedName("batteryLevelPct")
  private Integer batteryLevelPct = null;

  @SerializedName("picture")
  private FileSnapshot picture = null;

  /**
   * Typ pojazdu
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    CAR("CAR"),
    
    TRUCK("TRUCK");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("color")
  private String color = null;

  @SerializedName("location")
  private GeoPoint location = null;

  @SerializedName("locationDescription")
  private LocationDescription locationDescription = null;

  /**
   * Status pojazdu
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    AVAILABLE("AVAILABLE"),
    
    RESERVED("RESERVED"),
    
    RENTED("RENTED"),
    
    RETURNED("RETURNED"),
    
    UNAVAILABLE("UNAVAILABLE");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("sideNumber")
  private String sideNumber = null;

  public Vehicle id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Identyfikator obiektu
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Identyfikator obiektu")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Vehicle rangeKm(Long rangeKm) {
    this.rangeKm = rangeKm;
    return this;
  }

   /**
   * Zasięg w kilometrach
   * @return rangeKm
  **/
  @ApiModelProperty(required = true, value = "Zasięg w kilometrach")
  public Long getRangeKm() {
    return rangeKm;
  }

  public void setRangeKm(Long rangeKm) {
    this.rangeKm = rangeKm;
  }

  public Vehicle name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Nazwa
   * @return name
  **/
  @ApiModelProperty(value = "Nazwa")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Vehicle platesNumber(String platesNumber) {
    this.platesNumber = platesNumber;
    return this;
  }

   /**
   * Numer rejestracyjny pojazdu
   * @return platesNumber
  **/
  @ApiModelProperty(value = "Numer rejestracyjny pojazdu")
  public String getPlatesNumber() {
    return platesNumber;
  }

  public void setPlatesNumber(String platesNumber) {
    this.platesNumber = platesNumber;
  }

  public Vehicle reservationEnd(OffsetDateTime reservationEnd) {
    this.reservationEnd = reservationEnd;
    return this;
  }

   /**
   * Licznik końca rezerwacji
   * @return reservationEnd
  **/
  @ApiModelProperty(value = "Licznik końca rezerwacji")
  public OffsetDateTime getReservationEnd() {
    return reservationEnd;
  }

  public void setReservationEnd(OffsetDateTime reservationEnd) {
    this.reservationEnd = reservationEnd;
  }

  public Vehicle batteryLevelPct(Integer batteryLevelPct) {
    this.batteryLevelPct = batteryLevelPct;
    return this;
  }

   /**
   * Stan baterii w procentach
   * @return batteryLevelPct
  **/
  @ApiModelProperty(required = true, value = "Stan baterii w procentach")
  public Integer getBatteryLevelPct() {
    return batteryLevelPct;
  }

  public void setBatteryLevelPct(Integer batteryLevelPct) {
    this.batteryLevelPct = batteryLevelPct;
  }

  public Vehicle picture(FileSnapshot picture) {
    this.picture = picture;
    return this;
  }

   /**
   * Obrazek pojazdu
   * @return picture
  **/
  @ApiModelProperty(required = true, value = "Obrazek pojazdu")
  public FileSnapshot getPicture() {
    return picture;
  }

  public void setPicture(FileSnapshot picture) {
    this.picture = picture;
  }

  public Vehicle type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Typ pojazdu
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Typ pojazdu")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Vehicle color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Kolor pojazdu
   * @return color
  **/
  @ApiModelProperty(value = "Kolor pojazdu")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public Vehicle location(GeoPoint location) {
    this.location = location;
    return this;
  }

   /**
   * Współrzędne
   * @return location
  **/
  @ApiModelProperty(value = "Współrzędne")
  public GeoPoint getLocation() {
    return location;
  }

  public void setLocation(GeoPoint location) {
    this.location = location;
  }

  public Vehicle locationDescription(LocationDescription locationDescription) {
    this.locationDescription = locationDescription;
    return this;
  }

   /**
   * Opis lokalizacji pojazdu zwróconego w trybie bez GPS
   * @return locationDescription
  **/
  @ApiModelProperty(value = "Opis lokalizacji pojazdu zwróconego w trybie bez GPS")
  public LocationDescription getLocationDescription() {
    return locationDescription;
  }

  public void setLocationDescription(LocationDescription locationDescription) {
    this.locationDescription = locationDescription;
  }

  public Vehicle status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Status pojazdu
   * @return status
  **/
  @ApiModelProperty(required = true, value = "Status pojazdu")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Vehicle sideNumber(String sideNumber) {
    this.sideNumber = sideNumber;
    return this;
  }

   /**
   * Numer boczny pojazdu
   * @return sideNumber
  **/
  @ApiModelProperty(value = "Numer boczny pojazdu")
  public String getSideNumber() {
    return sideNumber;
  }

  public void setSideNumber(String sideNumber) {
    this.sideNumber = sideNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vehicle vehicle = (Vehicle) o;
    return Objects.equals(this.id, vehicle.id) &&
        Objects.equals(this.rangeKm, vehicle.rangeKm) &&
        Objects.equals(this.name, vehicle.name) &&
        Objects.equals(this.platesNumber, vehicle.platesNumber) &&
        Objects.equals(this.reservationEnd, vehicle.reservationEnd) &&
        Objects.equals(this.batteryLevelPct, vehicle.batteryLevelPct) &&
        Objects.equals(this.picture, vehicle.picture) &&
        Objects.equals(this.type, vehicle.type) &&
        Objects.equals(this.color, vehicle.color) &&
        Objects.equals(this.location, vehicle.location) &&
        Objects.equals(this.locationDescription, vehicle.locationDescription) &&
        Objects.equals(this.status, vehicle.status) &&
        Objects.equals(this.sideNumber, vehicle.sideNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, rangeKm, name, platesNumber, reservationEnd, batteryLevelPct, picture, type, color, location, locationDescription, status, sideNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vehicle {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    rangeKm: ").append(toIndentedString(rangeKm)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platesNumber: ").append(toIndentedString(platesNumber)).append("\n");
    sb.append("    reservationEnd: ").append(toIndentedString(reservationEnd)).append("\n");
    sb.append("    batteryLevelPct: ").append(toIndentedString(batteryLevelPct)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    locationDescription: ").append(toIndentedString(locationDescription)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sideNumber: ").append(toIndentedString(sideNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

